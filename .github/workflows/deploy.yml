name: 'Deploy Secure S3 CDK Stack'

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - prod

env:
  AWS_REGION: us-east-1
  NODE_VERSION: '18'
  CACHE_VERSION: 'v1'
  SONAR_SCANNER_VERSION: '4.8.0.2856'

permissions:
  id-token: write
  contents: read
  actions: read

jobs:
  # Code Quality and Linting
  code-quality:
    name: 'Code Quality & Formatting'
    runs-on: self-hosted
    timeout-minutes: 15
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup build environment
        run: |
          chmod +x scripts/*.sh
          ./scripts/setup-build-env.sh

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: ./scripts/install-deps.sh

      - name: Run comprehensive code quality checks
        run: |
          ./scripts/code-quality.sh

      - name: Upload code quality reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: code-quality-reports
          path: reports/code-quality/
          retention-days: 30

  # Unit Testing with Coverage
  test:
    name: 'Unit Tests & Coverage'
    runs-on: self-hosted
    timeout-minutes: 20
    needs: code-quality
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup build environment
        run: |
          chmod +x scripts/*.sh
          ./scripts/setup-build-env.sh

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: ./scripts/install-deps.sh

      - name: Run optimized test suite
        run: |
          ./scripts/run-tests.sh

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        if: always()
        with:
          file: ./coverage/lcov.info
          flags: unittests
          fail_ci_if_error: false
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: |
            coverage/
            reports/tests/
          retention-days: 30

  # CDK Synthesis and Validation
  cdk-synth:
    name: 'CDK Synthesis & Validation'
    runs-on: self-hosted
    timeout-minutes: 15
    needs: test
    strategy:
      matrix:
        environment: [dev, prod]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup build environment
        run: |
          chmod +x scripts/*.sh
          ./scripts/setup-build-env.sh

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: ./scripts/install-deps.sh

      - name: CDK Synthesis and Validation
        run: |
          ./scripts/cdk-synth.sh ${{ matrix.environment }}

      - name: Upload CDK templates
        uses: actions/upload-artifact@v4
        with:
          name: cdk-templates-${{ matrix.environment }}
          path: |
            cdk.out/
            reports/cdk/
          retention-days: 30
