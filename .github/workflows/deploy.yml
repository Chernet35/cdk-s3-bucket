name: 'Deploy Secure S3 CDK Stack'

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - prod

env:
  AWS_REGION: us-east-1
  NODE_VERSION: '18'

permissions:
  id-token: write
  contents: read
  security-events: write
  actions: read

jobs:
  security-scan:
    name: 'Security & Quality Checks'
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup system dependencies
        run: sudo apt-get update && sudo apt-get install -y unzip curl wget

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci
          npm outdated

      - name: Run NPM Security Audit
        run: |
          npm audit fix
          if [ $? -ne 0 ]; then
            echo "Found unfixable vulnerabilities!"
            npm audit --audit-level=moderate
          fi
          npm audit --output=json > npm-audit-results.json || true

      - name: Run Gitleaks Secret Scanner
        uses: zricethezav/gitleaks-action@v2
        env:
          RUNNER_TEMP: ${{ runner.temp }}
        with:
          version: v8.24.3
          config-path: .gitleaks.toml

      - name: Run Trivy Scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: fs
          scan-ref: .
          format: sarif
          output: trivy-results.sarif
          severity: CRITICAL,HIGH,MEDIUM
          ignore-unfixed: true

      - name: Upload Trivy results
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy-results.sarif

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5.0.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}

      - name: SonarQube Quality Gate check
        uses: sonarsource/sonarqube-quality-gate-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}
