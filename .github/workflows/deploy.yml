name: 'Secure CDK Deployment Pipeline'

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'dev'
        type: choice
        options: [dev, prod]

env:
  AWS_REGION: us-east-1
  NODE_VERSION: '20'
  TRIVY_VERSION: '0.50.0'
  GITLEAKS_VERSION: '8.24.3'

permissions:
  id-token: write
  contents: read
  security-events: write
  actions: read

jobs:
  compile:
    name: '1Ô∏è‚É£ Compile & Lint'
    runs-on: self-hosted
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Cache npm dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: npm-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: npm-${{ runner.os }}-

      - name: Install Dependencies
        run: npm ci --no-audit --prefer-offline

      - name: Run Lint
        run: npm run lint

      - name: Run Format Check
        run: npm run format:check

      - name: Compile TypeScript
        run: npm run build

  build:
    name: '2Ô∏è‚É£ CDK Synth & Build'
    runs-on: self-hosted
    timeout-minutes: 15
    needs: compile

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Restore npm Cache
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: npm-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: npm-${{ runner.os }}-

      - name: Install Dependencies
        run: npm ci --no-audit --prefer-offline

      - name: CDK Synth
        run: npx cdk synth

  security-scan:
    name: '3Ô∏è‚É£ Security Scan (npm, Trivy, Gitleaks)'
    runs-on: self-hosted
    timeout-minutes: 30
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: System Cleanup
        run: |
          sudo pkill -f dpkg || true
          sudo rm -rf /var/lib/apt/lists/lock /var/cache/apt/archives/lock /var/lib/dpkg/lock*
          echo 'DPkg::Lock::Timeout "120";' | sudo tee /etc/apt/apt.conf.d/100-timeout
          sudo apt-get update -y

      - name: Install Essential Tools
        run: |
          sudo apt-get install -y \
            ca-certificates curl wget unzip jq gnupg software-properties-common \
            lsb-release apt-transport-https

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install Node Dependencies
        run: npm ci --no-audit --prefer-offline

      - name: Run npm Audit
        run: |
          npm audit --omit=dev --audit-level=critical --json > npm-audit-results.json || true
          if jq -e '.metadata.vulnerabilities.critical > 0' npm-audit-results.json; then
            echo "CRITICAL_VULNERABILITIES=1" >> $GITHUB_ENV
            exit 1
          fi

      - name: Install Trivy
        run: |
          wget -q https://github.com/aquasecurity/trivy/releases/download/v${{ env.TRIVY_VERSION }}/trivy_${{ env.TRIVY_VERSION }}_Linux-64bit.tar.gz
          tar zxvf trivy_${{ env.TRIVY_VERSION }}_Linux-64bit.tar.gz
          sudo mv trivy /usr/local/bin/

      - name: Cache Trivy DB
        uses: actions/cache@v4
        with:
          path: ~/.cache/trivy
          key: trivy-db-${{ env.TRIVY_VERSION }}
          restore-keys: trivy-db-

      - name: Run Trivy FS Scan
        run: trivy fs --format sarif --output trivy-results.sarif .

      - name: Run Gitleaks
        uses: gitleaks/gitleaks-action@v2
        with:
          version: ${{ env.GITLEAKS_VERSION }}
          config-path: .gitleaks.toml

      - name: Upload SARIF (Trivy)
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy-results.sarif

  deploy:
    name: '4Ô∏è‚É£ Deploy (Placeholder)'
    runs-on: self-hosted
    needs: security-scan
    if: github.ref == 'refs/heads/main' || github.event.inputs.environment == 'prod'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Confirm Deployment
        run: echo "üöÄ Deployment would occur here to ${{ github.event.inputs.environment }}"
