name: Secure CDK Deployment Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'dev'

env:
  AWS_REGION: us-east-1
  CDK_ENV_ACCOUNT: ${{ secrets.AWS_ACCOUNT_ID }}
  CDK_ENV_REGION: us-east-1
  NODE_OPTIONS: '--max_old_space_size=4096'
  JEST_JUNIT_OUTPUT: './reports/junit.xml'

permissions:
  id-token: write
  contents: read

jobs:
  lint:
    name: Lint CloudFormation Template
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install cfn-lint
        run: pip install cfn-lint

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci

      - name: CDK Synth
        run: npx cdk synth > synthesized.template.json

      - name: Run cfn-lint
        run: cfn-lint --ignore-checks W2001 synthesized.template.json

  test:
    name: Run Tests & Coverage
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci

      - name: Run tests with coverage
        run: npm run test:coverage

  deploy:
    name: Deploy CDK Stack
    runs-on: ubuntu-latest
    needs: test
    environment: ${{ github.event.inputs.environment || 'dev' }}
    if: github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/${{ secrets.OIDC_DEPLOY_ROLE }}
          role-session-name: github-actions-cdk
          aws-region: ${{ env.AWS_REGION }}

      - name: CDK Bootstrap (if needed)
        run: |
          npx cdk bootstrap aws://${{ secrets.AWS_ACCOUNT_ID }}/${{ env.AWS_REGION }}

      - name: CDK Deploy
        run: |
          npx cdk deploy --require-approval never
