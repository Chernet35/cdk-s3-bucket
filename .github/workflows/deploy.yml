name: Secure CDK Deployment Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'dev'

env:
  NODE_VERSION: '20.x'
  AWS_REGION: us-east-1
  CDK_DEFAULT_ACCOUNT: ${{ secrets.AWS_ACCOUNT_ID }}

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: npm ci

      - name: Run TypeScript check
        run: npx tsc --noEmit --skipLibCheck

      - name: Run eslint
        run: npx eslint . --ext .ts --max-warnings=0

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests with coverage
        run: npm run test:coverage

  cdk-synth:
    runs-on: ubuntu-latest
    needs: [lint, test]
    strategy:
      matrix:
        environment: [dev, prod]
    env:
      ENV: ${{ matrix.environment }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: npm ci

      - name: Bootstrap CDK
        run: npx cdk bootstrap aws://$CDK_DEFAULT_ACCOUNT/$AWS_REGION

      - name: Synthesize CDK templates
        run: npx cdk synth --context env=${{ matrix.environment }} > synthesized.template.json

      - name: Set up Python with pip3
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install cfn-lint
        run: pip install cfn-lint

      - name: Validate CloudFormation templates
        run: |
          cfn-lint synthesized.template.json

  deploy:
    runs-on: ubuntu-latest
    needs: cdk-synth
    if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
    strategy:
      matrix:
        environment: [dev, prod]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/${{ secrets.DEPLOY_ROLE_NAME }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: npm ci

      - name: Deploy CDK stack
        run: npx cdk deploy --require-approval never --context env=${{ matrix.environment }}
