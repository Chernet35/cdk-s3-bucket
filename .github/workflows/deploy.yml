name: 'Secure CDK Deployment Pipeline'

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'dev'
        type: choice
        options: [dev, prod]

env:
  AWS_REGION: us-east-1
  NODE_VERSION: '20'
 
permissions:
  id-token: write
  contents: read
  security-events: write
  actions: read

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - uses: actions/checkout@v4
      
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    # Compilation step (for TypeScript projects)
    - name: Compile TypeScript
      if: contains(env.PACKAGE_JSON, '"typescript"')
      run: npm run build --if-present
      
    # Security scanning
    - name: Run npm audit
      run: npm audit --audit-level=moderate
      
    - name: Run Snyk security scan
      if: env.SNYK_TOKEN
      uses: snyk/actions/node@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        command: monitor
        args: --all-projects --severity-threshold=high
        
    # Linting & Formatting
    - name: Run ESLint
      run: npm run lint --if-present || (echo "Linting failed" && exit 1)
      
    - name: Check formatting with Prettier
      run: npm run format-check --if-present || (echo "Formatting check failed" && exit 1)
      
    # Unit Testing & Coverage
    - name: Run unit tests
      run: npm test
      
    - name: Run coverage
      run: npm run coverage --if-present
      
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      if: success() && matrix.node-version == '18.x' # Only upload once
      
  build-for-self-hosted:
    needs: build-and-test
    runs-on: self-hosted
    if: github.ref == 'refs/heads/main' # Only run for main branch
    
    steps:
    - uses: actions/checkout@v4
      
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci --production
      
    - name: Build for production
      run: npm run build --if-present
      
    - name: Create artifact
      run: |
        mkdir -p artifact
        cp -r dist/* artifact/  # For TypeScript projects
        cp package*.json artifact/
        cp -r node_modules artifact/
        
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: node-app
        path: artifact
        retention-days: 5
