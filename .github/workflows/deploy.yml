name: 'Enterprise CDK Deployment Pipeline'

on:
  push:
    branches: [main, develop]
    paths-ignore: ['**.md', 'docs/**', '.gitignore']
  pull_request:
    branches: [main]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Target environment'
        required: true
        default: 'dev'
        type: choice
        options: ['dev', 'staging', 'prod']
      skip_tests:
        description: 'Skip tests (emergency only)'
        required: false
        default: false
        type: boolean
      dry_run:
        description: 'Dry run only'
        required: false
        default: false
        type: boolean

env:
  AWS_REGION: us-east-1
  NODE_VERSION: '20'
  CDK_VERSION: '2.150.0'
  NODE_OPTIONS: '--max-old-space-size=4096'

permissions:
  id-token: write
  contents: read
  actions: read
  pull-requests: write
  security-events: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

jobs:
  validate:
    name: 'Validation'
    runs-on: [self-hosted, linux]
    timeout-minutes: 10
    outputs:
      cache-key: ${{ steps.cache.outputs.key }}
      deploy-dev: ${{ steps.env.outputs.dev }}
      deploy-prod: ${{ steps.env.outputs.prod }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Environment logic
        id: env
        run: |
          DEV="false"; PROD="false"
          [[ "${{ github.ref }}" == "refs/heads/develop" || "${{ inputs.environment }}" == "dev" ]] && DEV="true"
          [[ "${{ inputs.environment }}" == "prod" || "${{ contains(github.event.head_commit.message, '[deploy-prod]') }}" == "true" ]] && PROD="true"
          echo "dev=$DEV" >> $GITHUB_OUTPUT
          echo "prod=$PROD" >> $GITHUB_OUTPUT

      - name: Setup cache
        id: cache
        run: |
          KEY="deps-${{ runner.os }}-${{ env.NODE_VERSION }}-${{ hashFiles('package-lock.json') }}"
          echo "key=$KEY" >> $GITHUB_OUTPUT

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            ~/.npm
          key: ${{ steps.cache.outputs.key }}
          restore-keys: deps-${{ runner.os }}-${{ env.NODE_VERSION }}-

      - name: Install dependencies
        run: npm ci --silent --no-audit --no-fund

      - name: Security audit
        run: |
          npm audit --audit-level=high --json > audit.json || true
          CRITICAL=$(jq '.metadata.vulnerabilities.critical // 0' audit.json)
          HIGH=$(jq '.metadata.vulnerabilities.high // 0' audit.json)
          [[ $((CRITICAL + HIGH)) -gt 0 ]] && exit 1 || true

      - name: Lint and format
        run: |
          npx eslint . --ext .ts,.tsx --max-warnings 5
          npx prettier --check "**/*.{ts,tsx,json,md}" --write=false
          npx tsc --noEmit --skipLibCheck

